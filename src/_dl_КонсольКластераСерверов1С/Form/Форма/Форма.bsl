
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЗаполнитьДеревоКонсоли();
	
	УстановитьВидимостьКнопок(Неопределено);
	
КонецПроцедуры    

&НаСервере
Процедура ЗаполнитьДеревоКонсоли()
				
	Дерево.ПолучитьЭлементы().Очистить();
	
	НайтиКЕ();  		
		
КонецПроцедуры 

&НаСервере
Функция НайтиКЕ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	_dl_КонфигурационныеЕдиницы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник._dl_КонфигурационныеЕдиницы КАК _dl_КонфигурационныеЕдиницы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц КАК _dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц
		|		ПО (_dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.КонфигурационнаяЕдиница = _dl_КонфигурационныеЕдиницы.Ссылка)
		|			И (_dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.ТипДопРеквизита = ЗНАЧЕНИЕ(Справочник._dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.Сервер_ЭтоСерверПриложений))
		|ГДЕ
		|	_dl_КонфигурационныеЕдиницы.Тип = ЗНАЧЕНИЕ(Справочник._dl_ТипыКонфигурационныхЕдиниц.Сервер)
		|	И _dl_КонфигурационныеЕдиницы.КатегорияТипа = ЗНАЧЕНИЕ(Справочник._dl_КатегорииТиповКонфигурационныхЕдиниц.Инфраструктура)
		|	И НЕ _dl_КонфигурационныеЕдиницы.ПометкаУдаления
		|	И ВЫРАЗИТЬ(_dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.ЗначениеДопРеквизита КАК БУЛЕВО)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	_dl_КонфигурационныеЕдиницы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник._dl_КонфигурационныеЕдиницы КАК _dl_КонфигурационныеЕдиницы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц КАК _dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц
		|		ПО (_dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.КонфигурационнаяЕдиница = _dl_КонфигурационныеЕдиницы.Ссылка)
		|			И (_dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.ТипДопРеквизита = ЗНАЧЕНИЕ(Справочник._dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.Сервер_ЭтоСерверБазДанных))
		|ГДЕ
		|	_dl_КонфигурационныеЕдиницы.Тип = ЗНАЧЕНИЕ(Справочник._dl_ТипыКонфигурационныхЕдиниц.Сервер)
		|	И _dl_КонфигурационныеЕдиницы.КатегорияТипа = ЗНАЧЕНИЕ(Справочник._dl_КатегорииТиповКонфигурационныхЕдиниц.Инфраструктура)
		|	И НЕ _dl_КонфигурационныеЕдиницы.ПометкаУдаления
		|	И ВЫРАЗИТЬ(_dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.ЗначениеДопРеквизита КАК БУЛЕВО)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	_dl_КонфигурационныеЕдиницы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник._dl_КонфигурационныеЕдиницы КАК _dl_КонфигурационныеЕдиницы
		|ГДЕ
		|	_dl_КонфигурационныеЕдиницы.Тип = ЗНАЧЕНИЕ(Справочник._dl_ТипыКонфигурационныхЕдиниц.ИнформационнаяБаза1С)
		|	И _dl_КонфигурационныеЕдиницы.КатегорияТипа = ЗНАЧЕНИЕ(Справочник._dl_КатегорииТиповКонфигурационныхЕдиниц.Сервис)
		|	И НЕ _dl_КонфигурационныеЕдиницы.ПометкаУдаления";
		
	Пакет 						= Запрос.ВыполнитьПакет();
	ВыборкаСерверыПриложений 	= Пакет[0].Выбрать();
	ВыборкаСерверыБД 			= Пакет[1].Выбрать();
	ВыборкаИБ 					= Пакет[2].Выбрать();   
	
	//Консоль
	СтрокаКонсоль 					= Дерево.ПолучитьЭлементы().Добавить(); 
	СтрокаКонсоль.Имя 				= "Консоль";
	СтрокаКонсоль.ИндексКартинки 	= 12;
	
	СтрокаИБы 					= СтрокаКонсоль.ПолучитьЭлементы().Добавить();
	СтрокаИБы.Имя 				= "Информационные базы";
	СтрокаИБы.ИндексКартинки 	= 23;	
	
	Пока ВыборкаИБ.Следующий() Цикл 
		
		СтрокаИБ 				= СтрокаИБы.ПолучитьЭлементы().Добавить();
		СтрокаИБ.Имя 			= ""+ВыборкаИБ.Ссылка;  
		СтрокаИБ.Ссылка         = ВыборкаИБ.Ссылка;
		СтрокаИБ.ИндексКартинки = 23;   
		СтрокаИБ.ТипЭлемента	= "ИБ";

	КонецЦикла; 
	
	СтрокаСерверыПриложений 				= СтрокаКонсоль.ПолучитьЭлементы().Добавить();
	СтрокаСерверыПриложений.Имя 			= "Серверы приложений";
	СтрокаСерверыПриложений.ИндексКартинки 	= 27;
	
	Пока ВыборкаСерверыПриложений.Следующий() Цикл 
		
		СтрокаСерверПриложений 					= СтрокаСерверыПриложений.ПолучитьЭлементы().Добавить();
		СтрокаСерверПриложений.Имя 				= ""+ВыборкаСерверыПриложений.Ссылка; 
		СтрокаСерверПриложений.Ссылка         	= ВыборкаСерверыПриложений.Ссылка;
		СтрокаСерверПриложений.ИндексКартинки 	= 27;
		СтрокаСерверПриложений.ТипЭлемента		= "СерверПриложений";
		
	КонецЦикла;
	
	СтрокаСерверыБД 				= СтрокаКонсоль.ПолучитьЭлементы().Добавить();
	СтрокаСерверыБД.Имя 			= "Серверы баз данных";
	СтрокаСерверыБД.ИндексКартинки 	= 38;
	
	Пока ВыборкаСерверыБД.Следующий() Цикл 
		
		СтрокаСерверБД 					= СтрокаСерверыБД.ПолучитьЭлементы().Добавить();
		СтрокаСерверБД.Имя 				= ""+ВыборкаСерверыБД.Ссылка;
		СтрокаСерверБД.Ссылка         	= ВыборкаСерверыБД.Ссылка;
		СтрокаСерверБД.ИндексКартинки 	= 38;
		СтрокаСерверБД.ТипЭлемента		= "СерверБазДанных";
	
	КонецЦикла;
		
КонецФункции 

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработатьСтрокуДерева", 0.1, Истина);
			
КонецПроцедуры     

&НаКлиенте
Процедура ОбработатьСтрокуДерева() Экспорт
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;	
	КонецЕсли;
	
	ОбработатьСтрокуДереваНаСервере(ТекущиеДанные.Ссылка, ТекущиеДанные.ТипЭлемента);
	
	ОтключитьОбработчикОжидания("ОбработатьСтрокуДерева");
		
КонецПроцедуры 

&НаСервере
Процедура ОбработатьСтрокуДереваНаСервере(КЕ, ТипЭлемента)
	
	Если ЗначениеЗаполнено(КЕ) Тогда	
		ЗаполнитьТаблицуДопРеквизитами(КЕ, ТипЭлемента);
	Иначе
		ДеревоСвойств.ПолучитьЭлементы().Очистить();
	КонецЕсли;
	
	УстановитьВидимостьКнопок(КЕ);	
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьВидимостьКнопок(КЕ)
	
	Если ЗначениеЗаполнено(КЕ) Тогда
		Тип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КЕ, "Тип");  
		
		ВидимостьИБ = ЗначениеЗаполнено(КЕ) 
		И (Тип <> Неопределено
		И НЕ (Тип = ПредопределенноеЗначение("Справочник._dl_ТипыКонфигурационныхЕдиниц.Сервер")));
		
		Элементы.BackUp.Видимость 	= ВидимостьИБ;
		Элементы.Clone.Видимость	= ВидимостьИБ;
	Иначе
		Элементы.BackUp.Видимость 	= Ложь; 
		Элементы.Clone.Видимость	= Ложь;
	КонецЕсли;
		
	Элементы.New.Видимость 						= ЗначениеЗаполнено(КЕ);
	Элементы.кнопкаВизуализировать.Видимость 	= ЗначениеЗаполнено(КЕ);
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьТаблицуДопРеквизитами(КЕ, ТипЭлемента)
	
	ДеревоСвойств.ПолучитьЭлементы().Очистить(); 
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Строка"));
	МассивТипов.Добавить(Тип("Массив"));
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("Поле", 		Новый ОписаниеТипов("Строка"));
	ТаблицаЗначений.Колонки.Добавить("Значение", 	Новый ОписаниеТипов(МассивТипов));
	
	Если ТипЭлемента = "ИБ" Тогда
		СерверыПриложений 	= Новый Массив;
		СерверыБазДанных	= Новый Массив;
		
		Кластеры = НайтиВсеКЕПоТипу(КЕ, ПредопределенноеЗначение("Справочник._dl_ТипыКонфигурационныхЕдиниц.Кластер1С")); 
		Для каждого Кластер Из Кластеры Цикл
			Серверы = НайтиВсеКЕПоТипу(Кластер, ПредопределенноеЗначение("Справочник._dl_ТипыКонфигурационныхЕдиниц.Сервер"));
			Для каждого Сервер Из Серверы Цикл	
				ЭтоСерверПриложений = ПолучитьЗначениеДопРеквизита(Сервер, ПредопределенноеЗначение("Справочник._dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.Сервер_ЭтоСерверПриложений"));	
				Если ЭтоСерверПриложений Тогда	
					СерверыПриложений.Добавить(Сервер);	
				КонецЕсли;	
			КонецЦикла;
		КонецЦикла;	
		
		БДСУБД = НайтиВсеКЕПоТипу(КЕ, ПредопределенноеЗначение("Справочник._dl_ТипыКонфигурационныхЕдиниц.БазаДанныхСУБД"));
		Для каждого БД Из БДСУБД Цикл
			Серверы = НайтиВсеКЕПоТипу(БД, ПредопределенноеЗначение("Справочник._dl_ТипыКонфигурационныхЕдиниц.Сервер"));
			Для каждого Сервер Из Серверы Цикл
				ЭтоСерверБазДанных = ПолучитьЗначениеДопРеквизита(Сервер, ПредопределенноеЗначение("Справочник._dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.Сервер_ЭтоСерверБазДанных"));	
				Если ЭтоСерверБазДанных Тогда	
					СерверыБазДанных.Добавить(Сервер);	
				КонецЕсли;	
			КонецЦикла;
		КонецЦикла;  
		
		СтрокаТЗ 			= ТаблицаЗначений.Добавить();
		СтрокаТЗ.Поле 		= "База данных СУБД";
		СтрокаТЗ.Значение 	= БДСУБД;
		
		СтрокаТЗ 			= ТаблицаЗначений.Добавить();
		СтрокаТЗ.Поле 		= "Кластер 1С";
		СтрокаТЗ.Значение 	= Кластеры;
		
		СтрокаТЗ 			= ТаблицаЗначений.Добавить();
		СтрокаТЗ.Поле 		= "Сервер приложений 1С"; 
		СтрокаТЗ.Значение 	= СерверыПриложений;
		
		СтрокаТЗ 			= ТаблицаЗначений.Добавить();
		СтрокаТЗ.Поле 		= "Сервер баз данных"; 
		СтрокаТЗ.Значение 	= СерверыБазДанных;
		
	ИначеЕсли ТипЭлемента = "СерверПриложений" Тогда		
		ИнфБазы 			= Новый Массив; 
		БазыДанных 			= Новый Массив;
		СерверыБазДанных	= Новый Массив;
		
		Кластеры = НайтиВсеКЕПоТипу(КЕ, ПредопределенноеЗначение("Справочник._dl_ТипыКонфигурационныхЕдиниц.Кластер1С"));
		Для каждого Кластер Из Кластеры Цикл	
			Ибы = НайтиВсеКЕПоТипу(Кластер, ПредопределенноеЗначение("Справочник._dl_ТипыКонфигурационныхЕдиниц.ИнформационнаяБаза1С"));
			ДобавитьЭлементыМассиваВКоллекцию(Ибы, ИнфБазы);
			
			Для каждого Иб Из Ибы Цикл
				БДСУБД = НайтиВсеКЕПоТипу(Иб, ПредопределенноеЗначение("Справочник._dl_ТипыКонфигурационныхЕдиниц.БазаДанныхСУБД"));
				ДобавитьЭлементыМассиваВКоллекцию(БДСУБД, БазыДанных);
				
				Для каждого БД Из БДСУБД Цикл	
					Серверы = НайтиВсеКЕПоТипу(БД, ПредопределенноеЗначение("Справочник._dl_ТипыКонфигурационныхЕдиниц.Сервер"));
					
					Для каждого Сервер Из Серверы Цикл
						ЭтоСерверБазДанных = ПолучитьЗначениеДопРеквизита(Сервер, ПредопределенноеЗначение("Справочник._dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.Сервер_ЭтоСерверБазДанных"));					
						Если ЭтоСерверБазДанных Тогда
							Если СерверыБазДанных.Найти(Сервер) = Неопределено Тогда
								СерверыБазДанных.Добавить(Сервер);
							КонецЕсли;
						КонецЕсли;	
					КонецЦикла;
				КонецЦикла;  
			КонецЦикла;		
		КонецЦикла;	 
				
		СтрокаТЗ 			= ТаблицаЗначений.Добавить();
		СтрокаТЗ.Поле 		= "База данных СУБД";
		СтрокаТЗ.Значение 	= БазыДанных;
		
		СтрокаТЗ 			= ТаблицаЗначений.Добавить();
		СтрокаТЗ.Поле 		= "Кластер 1С";
		СтрокаТЗ.Значение 	= Кластеры;
		
		СтрокаТЗ 			= ТаблицаЗначений.Добавить();
		СтрокаТЗ.Поле 		= "Информационная база 1С"; 
		СтрокаТЗ.Значение 	= ИнфБазы;
		
		СтрокаТЗ 			= ТаблицаЗначений.Добавить();
		СтрокаТЗ.Поле 		= "Сервер баз данных"; 
		СтрокаТЗ.Значение 	= СерверыБазДанных;
		
	ИначеЕсли ТипЭлемента = "СерверБазДанных" Тогда		
		ИнфБазы 			= Новый Массив; 
		Кластеры1С 			= Новый Массив;
		СерверыПриложений 	= Новый Массив;
		
		БДСУБД = НайтиВсеКЕПоТипу(КЕ, ПредопределенноеЗначение("Справочник._dl_ТипыКонфигурационныхЕдиниц.БазаДанныхСУБД"));
		
		Для каждого БД Из БДСУБД Цикл
			Ибы = НайтиВсеКЕПоТипу(БД, ПредопределенноеЗначение("Справочник._dl_ТипыКонфигурационныхЕдиниц.ИнформационнаяБаза1С"));
			ДобавитьЭлементыМассиваВКоллекцию(Ибы, ИнфБазы);
			
			Для каждого Иб Из Ибы Цикл
				Кластеры = НайтиВсеКЕПоТипу(Иб, ПредопределенноеЗначение("Справочник._dl_ТипыКонфигурационныхЕдиниц.Кластер1С"));
				ДобавитьЭлементыМассиваВКоллекцию(Кластеры, Кластеры1С);
				
				Для каждого Кластер Из Кластеры Цикл
					Серверы = НайтиВсеКЕПоТипу(Кластер, ПредопределенноеЗначение("Справочник._dl_ТипыКонфигурационныхЕдиниц.Сервер"));
					
					Для каждого Сервер Из Серверы Цикл
						ЭтоСерверПриложений = ПолучитьЗначениеДопРеквизита(Сервер, ПредопределенноеЗначение("Справочник._dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.Сервер_ЭтоСерверПриложений"));	
						Если ЭтоСерверПриложений Тогда
							Если СерверыПриложений.Найти(Сервер) = Неопределено Тогда
								СерверыПриложений.Добавить(Сервер);
							КонецЕсли;
						КонецЕсли;	
					КонецЦикла;
				КонецЦикла;  
			КонецЦикла;		
		КонецЦикла;	
				
		СтрокаТЗ 			= ТаблицаЗначений.Добавить();
		СтрокаТЗ.Поле 		= "База данных СУБД";
		СтрокаТЗ.Значение 	= БДСУБД;
		
		СтрокаТЗ 			= ТаблицаЗначений.Добавить();
		СтрокаТЗ.Поле 		= "Кластер 1С";
		СтрокаТЗ.Значение 	= Кластеры1С;
		
		СтрокаТЗ 			= ТаблицаЗначений.Добавить();
		СтрокаТЗ.Поле 		= "Информационная база 1С"; 
		СтрокаТЗ.Значение 	= ИнфБазы;
		
		СтрокаТЗ 			= ТаблицаЗначений.Добавить();
		СтрокаТЗ.Поле 		= "Сервер приложений 1С"; 
		СтрокаТЗ.Значение 	= СерверыПриложений;
	КонецЕсли;  
	
    Запрос = Новый Запрос;
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	_dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.ЗначениеДопРеквизита КАК Значение,
	|	РС_ДополнительныеРеквизитыКонфигурационныхЕдиниц.Наименование КАК Поле
	|ИЗ
	|	РегистрСведений._dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц КАК _dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник._dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц КАК РС_ДополнительныеРеквизитыКонфигурационныхЕдиниц
	|		ПО _dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.ТипДопРеквизита = РС_ДополнительныеРеквизитыКонфигурационныхЕдиниц.Ссылка
	|ГДЕ
	|	_dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.КонфигурационнаяЕдиница = &КЕ
	|	И НЕ РС_ДополнительныеРеквизитыКонфигурационныхЕдиниц.ПометкаУдаления";

	Запрос.УстановитьПараметр("КЕ", КЕ);
	
	ВыборкаСвойств = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаСвойств.Следующий() Цикл
		СтрокаТЗ 			= ТаблицаЗначений.Добавить();
		СтрокаТЗ.Поле 		= ВыборкаСвойств.Поле; 
		СтрокаТЗ.Значение 	= ВыборкаСвойств.Значение;		
	КонецЦикла;
	
	ТаблицаЗначений.Сортировать("Поле");
	
	Для каждого СтрокаТЗ Из ТаблицаЗначений Цикл  
		Если Не ЗначениеЗаполнено(СтрокаТЗ.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(СтрокаТЗ.Значение) = Тип("Массив") Тогда
			Если СтрокаТЗ.Значение.Количество() = 1 Тогда
				СтрокаДерева 			= ДеревоСвойств.ПолучитьЭлементы().Добавить();
				СтрокаДерева.Поле 		= СтрокаТЗ.Поле;
				СтрокаДерева.Значение 	= СтрокаТЗ.Значение[0];
			ИначеЕсли СтрокаТЗ.Значение.Количество() > 1 Тогда
				СтрокаДерева 			= ДеревоСвойств.ПолучитьЭлементы().Добавить();
				СтрокаДерева.Поле 		= СтрокаТЗ.Поле;
				
				Для каждого Элемент Из СтрокаТЗ.Значение Цикл
					СтрокаДереваДетальное 			= СтрокаДерева.ПолучитьЭлементы().Добавить();
					СтрокаДереваДетальное.Поле 		= СтрокаТЗ.Поле;
					СтрокаДереваДетальное.Значение 	= Элемент;	
				КонецЦикла;
			КонецЕсли;
		Иначе
			СтрокаДерева 			= ДеревоСвойств.ПолучитьЭлементы().Добавить();
			СтрокаДерева.Поле 		= СтрокаТЗ.Поле;
			СтрокаДерева.Значение 	= СтрокаТЗ.Значение;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры 

&НаСервере
Процедура ДобавитьЭлементыМассиваВКоллекцию(Массив, Коллекция)
	
	Для каждого Элемент Из Массив Цикл
		Если Коллекция.Найти(Элемент) = Неопределено Тогда
			Коллекция.Добавить(Элемент);	
		КонецЕсли;
	КонецЦикла;	

КонецПроцедуры 

&НаСервере
Функция ПолучитьЗначениеДопРеквизита(КЕ, ДопРеквизит)
	
	Значение = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	_dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.ЗначениеДопРеквизита КАК ЗначениеДопРеквизита
		|ИЗ
		|	РегистрСведений._dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц КАК _dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц
		|ГДЕ
		|	_dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.КонфигурационнаяЕдиница = &КонфигурационнаяЕдиница
		|	И _dl_ДополнительныеРеквизитыКонфигурационныхЕдиниц.ТипДопРеквизита = &ТипДопРеквизита";
	
	Запрос.УстановитьПараметр("КонфигурационнаяЕдиница", 	КЕ);
	Запрос.УстановитьПараметр("ТипДопРеквизита", 			ДопРеквизит);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Значение = Выборка.ЗначениеДопРеквизита;	
			
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции 

&НаСервере
Функция НайтиВсеКЕПоТипу(КЕ, Тип)
	
	Массив = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	_dl_СвязиОбъектовСрезПоследних.ОбъектВ КАК Объект
		|ИЗ
		|	РегистрСведений._dl_СвязиОбъектов.СрезПоследних(, ОбъектИз = &КЕ) КАК _dl_СвязиОбъектовСрезПоследних
		|ГДЕ
		|	_dl_СвязиОбъектовСрезПоследних.ОбъектВ.Тип = &Тип
		|	И _dl_СвязиОбъектовСрезПоследних.ТипСвязи = Значение(Перечисление._dl_ТипыСвязи.ПрямаяСвязь)
		|	И _dl_СвязиОбъектовСрезПоследних.Актуальна";
	
	Запрос.УстановитьПараметр("КЕ", 	КЕ);
	Запрос.УстановитьПараметр("Тип", 	Тип);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Массив.Добавить(Выборка.Объект);			
	КонецЦикла;
	
	Возврат Массив;

КонецФункции 

&НаКлиенте
Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЭлементКЕ(ВыбраннаяСтрока, Дерево);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда) 
		
	ЗаполнитьДеревоКонсоли(); 
	ОбщегоНазначенияКлиент.СвернутьРазвернутьДерево(ЭтаФорма, Дерево.ПолучитьЭлементы(), "Дерево", Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЭлементКЕ(Команда)
	
	Идентификатор = Элементы.Дерево.ТекущаяСтрока;
	ПоказатьЭлементКЕ(Идентификатор, Дерево);				
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЭлементКЕ(Идентификатор, ДеревоЭлементов)

	СтрокаДерева = ДеревоЭлементов.НайтиПоИдентификатору(Идентификатор);  
	Если ЗначениеЗаполнено(СтрокаДерева.Ссылка) Тогда
		ПоказатьЗначение(,СтрокаДерева.Ссылка);	
	КонецЕсли;	

КонецПроцедуры 

&НаКлиенте
Процедура Визуализировать(Команда)
	
	Если ЗначениеЗаполнено(Элементы.Дерево.ТекущиеДанные.Ссылка) Тогда 
		
		Форма = ПолучитьФорму("Обработка._dl_ВизуализацияГрафовCMDB.Форма.Form");
		Форма.УстановитьКонфигурационнуюЕдиницу(Элементы.Дерево.ТекущиеДанные.Ссылка);
		Форма.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = ДеревоСвойств.НайтиПоИдентификатору(ВыбраннаяСтрока); 
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Если НЕ (ТипЗнч(ТекущиеДанные.Значение) = Тип("Строка")
		ИЛИ ТипЗнч(ТекущиеДанные.Значение) = Тип("Число")
		ИЛИ ТипЗнч(ТекущиеДанные.Значение) = Тип("Булево")
		ИЛИ ТипЗнч(ТекущиеДанные.Значение) = Тип("Дата")) Тогда  
		
		ПоказатьЗначение(,ТекущиеДанные.Значение);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Clone(Команда)
	
	ОткрытьФорму("ВнешняяОбработка.Форма.КлонИБ",,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаКлиенте
Процедура CloneИБ(Команда)
	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	
  	ПараметрыФормы = Новый Структура("ИБ", ТекущиеДанные.Ссылка);
	
	ОткрытьФорму("ВнешняяОбработка._dl_КонсольКластераСерверов1С.Форма.КлонИБ", ПараметрыФормы, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	

КонецПроцедуры
